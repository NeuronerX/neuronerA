--------------------------------------------------------------------------------
--   ONLY RUN IF IN GAME 6110766473
--------------------------------------------------------------------------------
if game.PlaceId ~= 6110766473 then
    return  -- Stop script if not in the correct game
end

--------------------------------------------------------------------------------
--   GET ALLOWED USER IDS FROM PASTEBIN
--------------------------------------------------------------------------------
local httpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local LP = Players.LocalPlayer

local pastebinUrl = "https://pastebin.com/raw/CjPQeuFP"  -- your raw link
local rawData = game:HttpGet(pastebinUrl)

-- Because your Pastebin itself has "return { [UserId] = true, ... }",
-- we simply loadstring() that data.
local success, result = pcall(loadstring(rawData))
if not success then
    warn("Failed to load allowed IDs from Pastebin. Stopping script.")
    return
end

-- result should now be your table of whitelisted IDs
local allowedIDs = result

--------------------------------------------------------------------------------
--   KICK LOCAL PLAYER IF NOT WHITELISTED
--------------------------------------------------------------------------------
if not allowedIDs[LP.UserId] then
    LP:Kick("You are not allowed to use this script.")
    return
end

-- Kick any new players who are not whitelisted
Players.PlayerAdded:Connect(function(p)
    if not allowedIDs[p.UserId] then
        p:Kick("You are not allowed to use this script.")
    end
end)

--------------------------------------------------------------------------------
--   CHAT SPY & NOTIFICATION HELPER
--------------------------------------------------------------------------------
loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Chat-spy-20280"))()

local function Notify(msg)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = "Zephyra FlexFight",
            Text = msg,
            Duration = 5
        })
    end)
end

--------------------------------------------------------------------------------
--   KAVO UI LOAD & WINDOW SETUP
--------------------------------------------------------------------------------
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window  = Library.CreateLib("Zephyra FlexFight", "DarkTheme")

-- Make UI bigger
spawn(function()
    wait(0.5)
    local gui = game.CoreGui:FindFirstChild("KavoUI")
    if gui then
        local main = gui:FindFirstChild("Main")
        if main and main:IsA("Frame") then
            main.Size = UDim2.new(0, 800, 0, 500)
        end
    end
end)

--------------------------------------------------------------------------------
--   TABS & SECTIONS
--------------------------------------------------------------------------------
local CombatTab = Window:NewTab("COMBAT")
local MiscTab   = Window:NewTab("MISC")

local CombatSec = CombatTab:NewSection("Combat")
local MiscSec   = MiscTab:NewSection("Misc")

--------------------------------------------------------------------------------
--   AURA VARIABLES & FUNCTIONS
--------------------------------------------------------------------------------
local AuraActive      = false
local AuraConnection  = nil
local AuraCharAddedConnection = nil
local Dist            = 20
local DistSquared     = Dist * Dist
local DMG_TIMES       = 2
local FT_TIMES        = 5
local AuraPlayers     = {}
local AuraPlayerTracker = {}
local Whitelist       = {}
local ShowSphere      = false
local Sphere          = nil
local SphereConnection= nil

local function CRB(x, d)
    if x:IsA("Tool") and x:FindFirstChild("Handle") then
        local h = x.Handle
        if not h:FindFirstChild("BoxReachPart") then
            local p = Instance.new("Part")
            p.Name = "BoxReachPart"
            p.Size = Vector3.new(d, d, d)
            p.Transparency = 1
            p.CanCollide = false
            p.Massless = true
            p.Parent = h
            local w = Instance.new("WeldConstraint")
            w.Part0 = h
            w.Part1 = p
            w.Parent = p
        end
    end
end

local function FireTouch(a, b, times)
    for _ = 1, times do
        firetouchinterest(a, b, 0)
        firetouchinterest(a, b, 1)
    end
end

local function KeepLock(p, t)
    if AuraPlayerTracker[p] then return end
    AuraPlayerTracker[p] = true
    while true do
        local lc = LP.Character
        local tc = p.Character
        if not (lc and tc) then break end
        local tw = lc:FindFirstChildWhichIsA("Tool")
        local th = tc:FindFirstChildOfClass("Humanoid")
        if not (tw and tw.Parent == lc and t.Parent and th and th.Health > 0) then break end
        for _, v in ipairs(tc:GetDescendants()) do
            if v:IsA("BasePart") then
                firetouchinterest(t, v, 0)
                firetouchinterest(t, v, 1)
            end
        end
        task.wait()
    end
    AuraPlayerTracker[p] = nil
end

local function AuraPC(c)
    for _, v in ipairs(c:GetDescendants()) do
        CRB(v, Dist)
    end
    c.ChildAdded:Connect(function(x)
        CRB(x, Dist)
    end)
end

local function AuraMH(toolPart, plr)
    local c = plr.Character
    if not c then return end
    if Whitelist[plr] then return end
    local h = c:FindFirstChildOfClass("Humanoid")
    local r = c:FindFirstChild("HumanoidRootPart")
    if not (h and r and h.Health > 0) then return end
    pcall(function()
        toolPart.Parent:Activate()
    end)
    for _ = 1, DMG_TIMES do
        for _, v in ipairs(c:GetDescendants()) do
            if v:IsA("BasePart") then
                FireTouch(toolPart, v, FT_TIMES)
            end
        end
    end
    task.spawn(function()
        KeepLock(plr, toolPart)
    end)
end

local function AuraHeartBeat()
    local c = LP.Character
    if not c then return end
    local hrp = c:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local pos = hrp.Position
    for _, t in ipairs(c:GetDescendants()) do
        if t:IsA("Tool") then
            local b = t:FindFirstChild("BoxReachPart") or t:FindFirstChild("Handle")
            if b then
                for _, p in ipairs(AuraPlayers) do
                    if p ~= LP and p.Character then
                        local rp = p.Character:FindFirstChild("HumanoidRootPart")
                        local hm = p.Character:FindFirstChildOfClass("Humanoid")
                        if rp and hm and hm.Health > 0 then
                            local d = rp.Position - pos
                            if d:Dot(d) <= DistSquared then
                                AuraMH(b, p)
                            end
                        end
                    end
                end
            end
        end
    end
end

local function StartAura()
    for _, p in ipairs(Players:GetPlayers()) do
        table.insert(AuraPlayers, p)
    end
    AuraConnection = RunService.Heartbeat:Connect(AuraHeartBeat)
    AuraCharAddedConnection = LP.CharacterAdded:Connect(function(c)
        c:WaitForChild("HumanoidRootPart", 10)
        AuraPC(c)
    end)
    if LP.Character then
        AuraPC(LP.Character)
    end
end

local function StopAura()
    if AuraConnection then
        AuraConnection:Disconnect()
        AuraConnection = nil
    end
    if AuraCharAddedConnection then
        AuraCharAddedConnection:Disconnect()
        AuraCharAddedConnection = nil
    end
    table.clear(AuraPlayers)
    table.clear(AuraPlayerTracker)
end

CombatSec:NewToggle("Aura I", "Toggle Aura", function(state)
    AuraActive = state
    if AuraActive then
        StartAura()
        Notify("Turned On Aura")
    else
        StopAura()
        Notify("Turned Off Aura")
    end
end)

CombatSec:NewTextBox("AURA REACH", "Set aura range (numbers only)", function(txt)
    local num = tonumber(txt)
    if num then
        Dist = num
        DistSquared = Dist * Dist
        Notify("Aura range set to " .. num)
    end
end)

--------------------------------------------------------------------------------
--   SWORD SPAM
--------------------------------------------------------------------------------
local SwordSpamActive     = false
local SwordSpamConnection = nil

CombatSec:NewToggle("Sword Spam", "Toggle sword spam", function(state)
    SwordSpamActive = state
    if SwordSpamActive then
        SwordSpamConnection = RunService.Stepped:Connect(function()
            for _, tool in ipairs(LP.Backpack:GetChildren()) do
                if tool.Name == "Punch" or tool.Name == "Ground Slam" or tool.Name == "Stomp" then
                    tool:Destroy()
                end
            end
            local t = LP.Character and LP.Character:FindFirstChildOfClass("Tool")
            if t then
                t:Activate()
            end
        end)
        Notify("Sword Spam ON")
    else
        if SwordSpamConnection then
            SwordSpamConnection:Disconnect()
            SwordSpamConnection = nil
        end
        Notify("Sword Spam OFF")
    end
end)

--------------------------------------------------------------------------------
--   SHOW AURA SPHERE
--------------------------------------------------------------------------------
local function UpdateSphere()
    if not Sphere then return end
    local c = LP.Character
    if not c then return end
    local hrp = c:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    Sphere.Size = Vector3.new(Dist * 2, Dist * 2, Dist * 2)
    Sphere.CFrame = CFrame.new(hrp.Position)
end

local function SphereHB()
    UpdateSphere()
end

local function StartSphere()
    if not Sphere then
        Sphere = Instance.new("Part")
        Sphere.Shape = Enum.PartType.Ball
        Sphere.Anchored = true
        Sphere.CanCollide = false
        Sphere.Transparency = 0.2
        Sphere.BrickColor = BrickColor.new("Bright green")
        Sphere.Parent = workspace
    end
    SphereConnection = RunService.Heartbeat:Connect(SphereHB)
end

local function StopSphere()
    if SphereConnection then
        SphereConnection:Disconnect()
        SphereConnection = nil
    end
    if Sphere then
        Sphere:Destroy()
        Sphere = nil
    end
end

CombatSec:NewToggle("SHOW AURA SPHERE", "Toggle aura sphere", function(state)
    ShowSphere = state
    if ShowSphere then
        StartSphere()
        Notify("Aura sphere visible")
    else
        StopSphere()
        Notify("Aura sphere hidden")
    end
end)

--------------------------------------------------------------------------------
--   LOOPBRING
--------------------------------------------------------------------------------
local LoopBringTargets       = {}
local LoopBringPlayers       = {}
local LoopBringPlayerTracker = {}
local LoopDist               = math.huge
local LB_DMG_TIMES           = 2
local LB_FT_TIMES            = 5
local LoopBringConnection    = nil
local LoopBringCharAddedConnection = nil

local function LB_CRB(x)
    if x:IsA("Tool") and x:FindFirstChild("Handle") then
        local h = x.Handle
        if not h:FindFirstChild("BoxReachPart") then
            local p = Instance.new("Part")
            p.Name = "BoxReachPart"
            p.Size = Vector3.new(LoopDist, LoopDist, LoopDist)
            p.Transparency = 1
            p.CanCollide = false
            p.Massless = true
            p.Parent = h
            local w = Instance.new("WeldConstraint")
            w.Part0 = h
            w.Part1 = p
            w.Parent = p
        end
    end
end

local function LB_FT(a, b)
    for _ = 1, LB_FT_TIMES do
        firetouchinterest(a, b, 0)
        firetouchinterest(a, b, 1)
    end
end

local function LB_KL(p, t)
    if LoopBringPlayerTracker[p] then return end
    LoopBringPlayerTracker[p] = true
    while true do
        local lc = LP.Character
        local tc = p.Character
        if not (lc and tc) then break end
        local tw = lc:FindFirstChildWhichIsA("Tool")
        local th = tc:FindFirstChildOfClass("Humanoid")
        if not (tw and tw.Parent == lc and t.Parent and th and th.Health > 0) then break end
        for _, v in ipairs(tc:GetDescendants()) do
            if v:IsA("BasePart") then
                firetouchinterest(t, v, 0)
                firetouchinterest(t, v, 1)
            end
        end
        task.wait()
    end
    LoopBringPlayerTracker[p] = nil
end

local function LB_PC(c)
    for _, v in ipairs(c:GetDescendants()) do
        LB_CRB(v)
    end
    c.ChildAdded:Connect(function(x)
        LB_CRB(x)
    end)
end

local function LB_MH(toolPart, plr)
    local c = plr.Character
    if not c then return end
    local h = c:FindFirstChildOfClass("Humanoid")
    local r = c:FindFirstChild("HumanoidRootPart")
    if not (h and r and h.Health > 0) then return end
    pcall(function()
        toolPart.Parent:Activate()
    end)
    for _ = 1, LB_DMG_TIMES do
        for _, v in ipairs(c:GetDescendants()) do
            if v:IsA("BasePart") then
                LB_FT(toolPart, v)
            end
        end
    end
    task.spawn(function()
        LB_KL(plr, toolPart)
    end)
end

local function LB_HB()
    local c = LP.Character
    if not c then return end
    local hrp = c:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    for _, t in ipairs(c:GetDescendants()) do
        if t:IsA("Tool") then
            local b = t:FindFirstChild("BoxReachPart") or t:FindFirstChild("Handle")
            if b then
                for _, p in ipairs(LoopBringPlayers) do
                    if LoopBringTargets[p.Name] then
                        if p.Character then
                            local hm = p.Character:FindFirstChildOfClass("Humanoid")
                            local rp = p.Character:FindFirstChild("HumanoidRootPart")
                            if rp and hm and hm.Health > 0 then
                                LB_MH(b, p)
                            end
                        end
                    end
                end
            end
        end
    end
end

local function StartLoopBring()
    for _, p in ipairs(Players:GetPlayers()) do
        table.insert(LoopBringPlayers, p)
    end
    LoopBringConnection = RunService.Heartbeat:Connect(LB_HB)
    LoopBringCharAddedConnection = LP.CharacterAdded:Connect(function(c)
        c:WaitForChild("HumanoidRootPart", 3)
        LB_PC(c)
    end)
    if LP.Character then
        LB_PC(LP.Character)
    end
end

local function StopLoopBring()
    if LoopBringConnection then
        LoopBringConnection:Disconnect()
        LoopBringConnection = nil
    end
    if LoopBringCharAddedConnection then
        LoopBringCharAddedConnection:Disconnect()
        LoopBringCharAddedConnection = nil
    end
    table.clear(LoopBringPlayers)
    table.clear(LoopBringPlayerTracker)
end

CombatSec:NewTextBox("Loopbring", "Type user to toggle loopkill", function(txt)
    local plr
    txt = tostring(txt)
    for _, p in ipairs(Players:GetPlayers()) do
        if p.Name:lower():sub(1, #txt) == txt:lower() then
            plr = p
            break
        end
    end

    if plr then
        if LoopBringTargets[plr.Name] then
            LoopBringTargets[plr.Name] = nil
            Notify("Unloopbringing " .. plr.Name)
        else
            LoopBringTargets[plr.Name] = true
            Notify("Loopbringing " .. plr.Name)
        end

        if next(LoopBringTargets) then
            StartLoopBring()
        else
            StopLoopBring()
        end
    else
        Notify("Player not found")
    end
end)

--------------------------------------------------------------------------------
--   MISC SECTION
--------------------------------------------------------------------------------
MiscSec:NewTextBox("Whitelist Player", "Type user to toggle aura immunity", function(txt)
    local plr
    txt = tostring(txt)
    for _, p in ipairs(Players:GetPlayers()) do
        if p.Name:lower():sub(1, #txt) == txt:lower() then
            plr = p
            break
        end
    end

    if plr then
        if Whitelist[plr] then
            Whitelist[plr] = nil
            Notify("Removed " .. plr.Name .. " from aura whitelist")
        else
            Whitelist[plr] = true
            Notify("Added " .. plr.Name .. " to aura whitelist")
        end
    else
        Notify("Player not found")
    end
end)

MiscSec:NewButton("Get Swords", "Unlock swords", function()
    game.ReplicatedStorage.UnlockedSwords:FireServer({true, true, true}, "894An3ti44Ex321P3llo99i3t")
    Notify("Swords Unlocked")
end)

MiscSec:NewToggle("Level Up", "Toggle auto level up", function(s)
    LevelUpActive = s
    if LevelUpActive then
        _G.lvlup = true
        coroutine.wrap(function()
            while _G.lvlup do
                wait(0.41)
                for i = 5, 537 do
                    game:GetService("ReplicatedStorage").ClaimChallenge:FireServer(5, "An5nit43534per3plo34itdfs")
                end
            end
        end)()
        Notify("Level Up enabled")
    else
        _G.lvlup = false
        Notify("Level Up disabled")
    end
end)

MiscSec:NewTextBox("Get Time", "Type amount up to 10000", function(txt)
    local num = tonumber(txt)
    if num then
        if num > 0 and num <= 10000 then
            for i = 1, num do
                game.ReplicatedStorage.ChangeTime:FireServer("Anti333Exploitz123FF45324", 433, 429)
            end
            Notify("Adding " .. num .. " Time")
        else
            Notify("Time Should not be over 10000")
        end
    else
        Notify("Invalid number")
    end
end)

--------------------------------------------------------------------------------
--   RAPID SWORD: ALL AT ONCE & OPTIMIZER
--------------------------------------------------------------------------------
local RapidSwordToggle                = false
local RapidSwordCoroutine             = nil
local RapidSwordHumanoidDieConnection = nil
local SwordsUnlockedOnce              = false

local ParticlesAndTrails = {}
local OriginalVolumes    = {}

local function EnableOptimizer()
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
            ParticlesAndTrails[obj] = obj.Enabled
            obj.Enabled = false
        elseif obj:IsA("Sound") then
            OriginalVolumes[obj] = obj.Volume
            if obj.Volume > 0.2 then
                obj.Volume = 0.2
            end
        end
    end
end

local function DisableOptimizer()
    for obj, oldEnabled in pairs(ParticlesAndTrails) do
        if obj and obj.Parent then
            obj.Enabled = oldEnabled
        end
    end
    ParticlesAndTrails = {}

    for obj, oldVolume in pairs(OriginalVolumes) do
        if obj and obj.Parent then
            obj.Volume = oldVolume
        end
    end
    OriginalVolumes = {}
end

local function StopRapidSword()
    RapidSwordToggle = false
    if RapidSwordCoroutine then
        RapidSwordCoroutine = nil
    end
    if RapidSwordHumanoidDieConnection then
        RapidSwordHumanoidDieConnection:Disconnect()
        RapidSwordHumanoidDieConnection = nil
    end
    DisableOptimizer()
    Notify("Rapid Sword OFF")
end

local function StartRapidSword()
    Notify("Rapid Sword ON")
    EnableOptimizer()

    if not SwordsUnlockedOnce then
        SwordsUnlockedOnce = true
        for i = 1, 5 do
            game.ReplicatedStorage.UnlockedSwords:FireServer({true, true, true}, "894An3ti44Ex321P3llo99i3t")
            wait(0.1)
        end
    end

    local char = LP.Character
    if not char or not char:FindFirstChild("Humanoid") then
        Notify("No valid character or humanoid found. Stopping.")
        StopRapidSword()
        return
    end

    local humanoid = char:FindFirstChild("Humanoid")
    if humanoid then
        RapidSwordHumanoidDieConnection = humanoid.Died:Connect(function()
            StopRapidSword()
        end)
    end

    for _, item in ipairs(LP.Backpack:GetChildren()) do
        if item:IsA("Tool") then
            item.Parent = char
        end
    end

    RapidSwordCoroutine = coroutine.create(function()
        while RapidSwordToggle do
            char = LP.Character
            if not char or not char:FindFirstChild("Humanoid") then
                StopRapidSword()
                break
            end

            local swords = {}
            for _, tool in ipairs(char:GetChildren()) do
                if tool:IsA("Tool") then
                    table.insert(swords, tool)
                end
            end

            for _, sword in ipairs(swords) do
                if not RapidSwordToggle then break end
                for _ = 1, 3 do
                    sword:Activate()
                    wait(0.02)
                end

                local slashScript = sword:FindFirstChild("SwordScript", true)
                if slashScript then
                    local lunge = slashScript:FindFirstChild("Lunge", true)
                    if lunge and lunge:IsA("RemoteEvent") then
                        lunge:FireServer()
                    end
                end
                wait(0.08)
            end
            wait(0.3)
        end
    end)

    coroutine.resume(RapidSwordCoroutine)
end

CombatSec:NewToggle("Rapid Sword", "Equip all swords & repeatedly lunge them (with optimizer)", function(state)
    if state then
        RapidSwordToggle = true
        StartRapidSword()
    else
        StopRapidSword()
    end
end)

--------------------------------------------------------------------------------
--   GET OWNER EFFECT (BUTTON)
--------------------------------------------------------------------------------
MiscSec:NewButton("Get Owner Effect", "Unlock Owner Effects", function()
    local killEffects = LP:FindFirstChild("KillEffects")
    if killEffects and killEffects:FindFirstChild("Owner") and killEffects.Owner:IsA("BoolValue") then
        if killEffects.Owner.Value == false then
            game.ReplicatedStorage.KilledTheOwnerUnlocker:FireServer("An4ni324nitw332Ex3243ploew3ts")
            Notify("Giving Owner Effects")
        else
            Notify("You Already Have The Owner Effect")
        end
    else
        Notify("KillEffects.Owner Value not found in your player.")
    end
end)

--------------------------------------------------------------------------------
--   KEYBIND FOR TOGGLING UI
--------------------------------------------------------------------------------
MiscSec:NewKeybind("UI Toggle", "Toggle the UI", Enum.KeyCode.RightControl, function()
    Library:ToggleUI()
end)

--------------------------------------------------------------------------------
--   PLAYERS HANDLING (AURA & LOOPBRING)
--------------------------------------------------------------------------------
Players.PlayerAdded:Connect(function(p)
    table.insert(AuraPlayers, p)
    table.insert(LoopBringPlayers, p)
end)

Players.PlayerRemoving:Connect(function(p)
    for i, v in ipairs(AuraPlayers) do
        if v == p then
            table.remove(AuraPlayers, i)
            break
        end
    end
    for i, v in ipairs(LoopBringPlayers) do
        if v == p then
            table.remove(LoopBringPlayers, i)
            break
        end
    end
    if LoopBringTargets[p.Name] then
        LoopBringTargets[p.Name] = nil
        Notify("Unloopbringing " .. p.Name)
        if not next(LoopBringTargets) then
            if LoopBringConnection then
                LoopBringConnection:Disconnect()
                LoopBringConnection = nil
            end
            if LoopBringCharAddedConnection then
                LoopBringCharAddedConnection:Disconnect()
                LoopBringCharAddedConnection = nil
            end
            table.clear(LoopBringPlayers)
            table.clear(LoopBringPlayerTracker)
        end
    end
    if Whitelist[p] then
        Whitelist[p] = nil
        Notify("Removed " .. p.Name .. " from aura whitelist")
    end
end)

--------------------------------------------------------------------------------
--   LOAD ANY EXTRA SCRIPT (AT END)
--------------------------------------------------------------------------------
loadstring(game:HttpGet("https://pastebin.com/raw/Drk6gxG0"))()
